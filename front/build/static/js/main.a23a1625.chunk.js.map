{"version":3,"sources":["components/loader.js","components/product-list.js","options/options.js","app.js","hooks/hooks.js","index.js"],"names":["override","css","Loader","props","loading","className","color","size","ProductList","items","map","item","index","date","Date","invoice_date","invoice_num","getUTCMonth","getUTCDay","getUTCFullYear","product_description","qty","parseFloat","price","toFixed","total","relativeDateOptions","value","label","App","promiseInProgress","usePromiseTracker","useState","products","setProducts","relativeDate","setRelativeDate","productId","setProductId","clientId","setClientId","clients","setClients","useEffect","trackPromise","axios","post","then","response","data","catch","error","console","log","useClientOptions","setItems","useInvoiceList","onChange","e","target","option","client","client_id","product","product_id","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2YAGA,IAAMA,EAAWC,cAAH,KAMC,SAASC,EAAOC,GAC3B,OACI,mCACKA,EAAMC,SACH,qBAAKC,UAAU,SAAf,SACI,cAAC,IAAD,CAAcC,MAAM,oBAAoBF,QAASD,EAAMC,QAASH,IAAKD,EAAUO,KAAM,UCd1F,SAASC,EAAYL,GAChC,IAAMM,EAAQN,EAAMM,MACpB,OACI,wBAAOJ,UAAU,QAAjB,UACI,gCACI,+BACI,gDACA,8CACA,qDACA,qCACA,uCACA,4CAGR,gCACKI,EAAMC,KAAI,SAACC,EAAMC,GACd,IAAMC,EAAO,IAAIC,KAAKH,EAAKI,cAC3B,OACI,+BACI,6BACKJ,EAAKK,cAEV,uCACQH,EAAKI,cAAc,EAD3B,YACgCJ,EAAKK,YADrC,YACoDL,EAAKM,oBAEzD,6BACKR,EAAKS,sBAEV,6BACKT,EAAKU,MAEV,wCACSC,WAAWX,EAAKY,OAAOC,QAAQ,MAExC,wCACSF,WAAWX,EAAKc,OAAOD,QAAQ,QAjBnCZ,WClB1B,IAAMc,EAAsB,CAC/B,CACIC,MAAO,qBACPC,MAAO,sBAEX,CACID,MAAO,aACPC,MAAO,cAEX,CACID,MAAO,YACPC,MAAO,aAEX,CACID,MAAO,YACPC,MAAO,cC2DAC,MAjEf,WAAgB,IAENC,EAAsBC,8BAAtBD,kBAFK,EAGmBE,mBAAS,IAH5B,mBAGNC,EAHM,KAGIC,EAHJ,OAI2BF,mBAAS,IAJpC,mBAING,EAJM,KAIQC,EAJR,OAKqBJ,mBAAS,IAL9B,mBAKNK,EALM,KAKKC,EALL,OAMmBN,mBAAS,IAN5B,mBAMNO,EANM,KAMIC,EANJ,KAOPC,ECZD,WAA6B,IAAD,EACDT,mBAAS,IADR,mBACxBS,EADwB,KACfC,EADe,KAkB/B,OAfAC,qBAAU,WACNC,uBACIC,IAAMC,KAAK,kCACNC,MAAK,SAAUC,GACRA,EAASC,MACTP,EAAWM,EAASC,SAG3BC,OAAM,SAAUC,GACbC,QAAQC,IAAIF,SAIzB,IAEIV,EDNOa,GACV7C,ECSD,SAAwB4B,EAAWE,EAAUJ,GAAe,IAAD,EACpCH,mBAAS,IAD2B,mBACvDvB,EADuD,KAChD8C,EADgD,KAsBlE,OAnBIZ,qBAAU,WAENC,uBACIC,IAAMC,KAAK,yBAA0B,CACjC,WAAcT,EACd,UAAaE,EACb,cAAiBJ,IAEhBY,MAAK,SAAUC,GACRA,EAASC,MACTM,EAASP,EAASC,SAGzBC,OAAM,SAAUC,GACbC,QAAQC,IAAIF,SAG7B,CAACd,EAAWE,EAAUJ,IAElB1B,ED/BS+C,CAAenB,EAAWE,EAAUJ,GAsBlD,OACE,sBAAK9B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,sBACA,sBAAKA,UAAU,UAAf,UACE,yBAAQA,UAAU,SAASsB,MAAOQ,EAAcsB,SAAU,SAACC,GAAD,OAAOtB,EAAgBsB,EAAEC,OAAOhC,QAA1F,UACE,wBAAQA,MAAM,GAAd,2BACCD,EAAoBhB,KAAI,SAACkD,GAAD,OACvB,wBAAQjC,MAAOiC,EAAOjC,MAAtB,SAAiDiC,EAAOhC,OAAtBgC,EAAOjC,aAI7C,yBAAQtB,UAAU,SAASsB,MAAOY,EAAUkB,SA/BvB,SAACC,GAE1BlB,EAAYkB,EAAEC,OAAOhC,OAErBiB,uBACEC,IAAMC,KAAK,4CAA6C,CACtD,UAAaY,EAAEC,OAAOhC,QAErBoB,MAAK,SAAUC,GACVA,EAASC,OACXf,EAAYc,EAASC,MACrBX,EAAa,QAGhBY,OAAM,SAAUC,GACfC,QAAQC,IAAIF,QAgBd,UACE,wBAAQxB,MAAM,GAAd,oBACCc,EAAQ/B,KAAI,SAACmD,GAAD,OACX,wBAAQlC,MAAOkC,EAAOC,UAAtB,SAAyDD,EAAOC,WAA1BD,EAAOC,iBAGhDvB,GACC,yBAAQlC,UAAU,SAASsB,MAAOU,EAAWoB,SAAU,SAACC,GAAD,OAAOpB,EAAaoB,EAAEC,OAAOhC,QAApF,UACE,wBAAQA,MAAM,GAAd,qBACCM,EAASvB,KAAI,SAACqD,GAAD,OACZ,wBAAQpC,MAAOoC,EAAQC,WAAvB,SAA6DD,EAAQ3C,qBAA7B2C,EAAQC,qBAMxD,cAACxD,EAAD,CAAaC,MAAOA,IAEF,IAAjBA,EAAMwD,QAAgB,mBAAG5D,UAAU,aAAb,qCACvB,cAACH,EAAD,CAAQE,QAAS0B,QEhEvBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a23a1625.chunk.js","sourcesContent":["import BounceLoader from \"react-spinners/BounceLoader\";\r\nimport { css } from \"@emotion/core\";\r\n\r\nconst override = css`\r\ndisplay: block;\r\nmargin: 0 auto;\r\nborder-color: red;\r\n`;\r\n\r\nexport default function Loader(props) {\r\n    return (\r\n        <>\r\n            {props.loading &&\r\n                <div className=\"loader\">\r\n                    <BounceLoader color='rgb(54, 215, 183)' loading={props.loading} css={override} size={150} />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}","export default function ProductList(props) {\r\n    const items = props.items;\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Invoice number</th>\r\n                    <th>Invoice date</th>\r\n                    <th>Product description</th>\r\n                    <th>Qty</th>\r\n                    <th>Price</th>\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map((item, index) => {\r\n                    const date = new Date(item.invoice_date);\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>\r\n                                {item.invoice_num}\r\n                            </td>\r\n                            <td>\r\n                                {`${date.getUTCMonth()+1}/${date.getUTCDay()}/${date.getUTCFullYear()}`}\r\n                            </td>\r\n                            <td>\r\n                                {item.product_description}\r\n                            </td>\r\n                            <td>\r\n                                {item.qty}\r\n                            </td>\r\n                            <td>\r\n                                {`$${parseFloat(item.price).toFixed(2)}`}\r\n                            </td>\r\n                            <td>\r\n                                {`$${parseFloat(item.total).toFixed(2)}`}\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                }\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","export const relativeDateOptions = [\r\n    {\r\n        value: 'last_month_to_date',\r\n        label: 'Last month do date'\r\n    },\r\n    {\r\n        value: 'this_month',\r\n        label: 'This month'\r\n    },\r\n    {\r\n        value: 'this_year',\r\n        label: 'This year'\r\n    },\r\n    {\r\n        value: 'last_year',\r\n        label: 'Last year'\r\n    },\r\n];","import axios from 'axios';\nimport { useState } from 'react';\nimport './app.css';\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport { useClientOptions, useInvoiceList } from './hooks/hooks';\nimport Loader from './components/loader';\nimport ProductList from './components/product-list';\nimport { relativeDateOptions } from './options/options';\n\nfunction App() {\n\n  const { promiseInProgress } = usePromiseTracker();\n  const [products, setProducts] = useState([]);\n  const [relativeDate, setRelativeDate] = useState('');\n  const [productId, setProductId] = useState('');\n  const [clientId, setClientId] = useState('');\n  const clients = useClientOptions();\n  const items = useInvoiceList(productId, clientId, relativeDate);\n\n  const handleChangeClient = (e) => {\n\n    setClientId(e.target.value);\n\n    trackPromise(\n      axios.post('http://localhost:8000/products_by_client/', {\n        'client_id': e.target.value\n      })\n        .then(function (response) {\n          if (response.data) {\n            setProducts(response.data);\n            setProductId('');\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Invoices</h1>\n      <div className=\"filters\">\n        <select className=\"select\" value={relativeDate} onChange={(e) => setRelativeDate(e.target.value)}>\n          <option value=\"\">Relative date</option>\n          {relativeDateOptions.map((option) => (\n            <option value={option.value} key={option.value}>{option.label}</option>\n          ))}\n          \n        </select>\n        <select className=\"select\" value={clientId} onChange={handleChangeClient}>\n          <option value=\"\">Client</option>\n          {clients.map((client) => (\n            <option value={client.client_id} key={client.client_id}>{client.client_id}</option>\n          ))}\n        </select>\n        {clientId &&\n          <select className=\"select\" value={productId} onChange={(e) => setProductId(e.target.value)}>\n            <option value=\"\">Product</option>\n            {products.map((product) => (\n              <option value={product.product_id} key={product.product_id}>{product.product_description}</option>\n            ))}\n          </select>\n        }\n      </div>\n\n      <ProductList items={items} />\n\n      {items.length === 0 && <p className=\"no-entries\">No invoices were found.</p>}\n      <Loader loading={promiseInProgress} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nexport function useClientOptions() {\r\n    const [clients, setClients] = useState([]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(\r\n            axios.post('http://localhost:8000/clients/')\r\n                .then(function (response) {\r\n                    if (response.data) {\r\n                        setClients(response.data);\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        )\r\n\r\n    }, []);\r\n\r\n    return clients;\r\n\r\n}\r\n\r\nexport function useInvoiceList(productId, clientId, relativeDate) {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        trackPromise(\r\n            axios.post('http://localhost:8000/', {\r\n                'product_id': productId,\r\n                'client_id': clientId,\r\n                'relative_date': relativeDate\r\n            })\r\n                .then(function (response) {\r\n                    if (response.data) {\r\n                        setItems(response.data);\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n       );\r\n}, [productId, clientId, relativeDate]);\r\n\r\nreturn items;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}